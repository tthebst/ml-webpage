name: page

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  #=========build and push container images===========
  appengine-generative:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Install gcloud SDK
        run: |
          sudo apt-get update && sudo apt-get install google-cloud-sdk
      - name: Activate Service Account
        env:
          GCLOUD_AUTH: ${{ secrets.GCLOUD_AUTH }}
        run: |
          echo "$GCLOUD_AUTH" | base64 --decode > "$HOME"/gcloud.json
          sh -c "gcloud auth activate-service-account --key-file=$HOME/gcloud.json $*"
      - name: deploy to app engine
        run: |
          gsutil cp gs://ml-webpage/2.tar.gz ./model_functions/generative/2.tar.gz 
          tar -xf ./model_functions/generative/2.tar.gz -C ./model_functions/generative
          gcloud app deploy --project=ml-webpage-264418 ./model_functions/generative/app.yaml
  appengine-deepspeech:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Install gcloud SDK
        run: |
          sudo apt-get update && sudo apt-get install google-cloud-sdk
      - name: Activate Service Account
        env:
          GCLOUD_AUTH: ${{ secrets.GCLOUD_AUTH }}
        run: |
          echo "$GCLOUD_AUTH" | base64 --decode > "$HOME"/gcloud.json
          sh -c "gcloud auth activate-service-account --key-file=$HOME/gcloud.json $*"
      - name: deploy to app engine
        run: |
          gsutil cp gs://ml-webpage/librispeech_pretrained_v2.pth ./model_functions/language/deepspeech/librispeech_pretrained_v2.pth
          gcloud app deploy --project=ml-webpage-264418 ./model_functions/language/deepspeech/app.yaml
  appengine-object-detect:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Install gcloud SDK
        run: |
          sudo apt-get update && sudo apt-get install google-cloud-sdk
      - name: Activate Service Account
        env:
          GCLOUD_AUTH: ${{ secrets.GCLOUD_AUTH }}
        run: |
          echo "$GCLOUD_AUTH" | base64 --decode > "$HOME"/gcloud.json
          sh -c "gcloud auth activate-service-account --key-file=$HOME/gcloud.json $*"
      - name: deploy to app engine
        run: |
          gcloud app deploy --project=ml-webpage-264418 ./model_functions/object_detection/app.yaml
  appengine-webapp:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Install gcloud SDK
        run: |
          sudo apt-get update && sudo apt-get install google-cloud-sdk
      - name: Activate Service Account
        env:
          GCLOUD_AUTH: ${{ secrets.GCLOUD_AUTH }}
        run: |
          echo "$GCLOUD_AUTH" | base64 --decode > "$HOME"/gcloud.json
          sh -c "gcloud auth activate-service-account --key-file=$HOME/gcloud.json $*"
      - name: deploy to app engine
        run: |
          gcloud app deploy --project=ml-webpage-264418 ./flask/app.yaml
  #=========deploy glcoud funtions===========
  deploy-cloudfunctions-alexnet:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install gcloud SDK
        run: |
          sudo apt-get update && sudo apt-get install google-cloud-sdk
      - name: Activate Service Account
        env:
          GCLOUD_AUTH: ${{ secrets.GCLOUD_AUTH }}
        run: |
          echo "$GCLOUD_AUTH" | base64 --decode > "$HOME"/gcloud.json
          sh -c "gcloud auth activate-service-account --key-file=$HOME/gcloud.json $*"
      - name: deploy function
        run: |
          gcloud functions deploy alexnet --runtime python37 --allow-unauthenticated --memory 2048 --max-instances 3 --project ml-webpage-264418 --service-account github-action@ml-webpage-264418.iam.gserviceaccount.com --source ./model_functions/classification/alexnet
  deploy-cloudfunctions-densenet:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install gcloud SDK
        run: |
          sudo apt-get update && sudo apt-get install google-cloud-sdk
      - name: Activate Service Account
        env:
          GCLOUD_AUTH: ${{ secrets.GCLOUD_AUTH }}
        run: |
          echo "$GCLOUD_AUTH" | base64 --decode > "$HOME"/gcloud.json
          sh -c "gcloud auth activate-service-account --key-file=$HOME/gcloud.json $*"
      - name: deploy function
        run: |
          gcloud functions deploy densenet --runtime python37 --allow-unauthenticated --memory 1024 --max-instances 3 --project ml-webpage-264418 --service-account github-action@ml-webpage-264418.iam.gserviceaccount.com --source ./model_functions/classification/densenet
  deploy-cloudfunctions-googlenet:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install gcloud SDK
        run: |
          sudo apt-get update && sudo apt-get install google-cloud-sdk
      - name: Activate Service Account
        env:
          GCLOUD_AUTH: ${{ secrets.GCLOUD_AUTH }}
        run: |
          echo "$GCLOUD_AUTH" | base64 --decode > "$HOME"/gcloud.json
          sh -c "gcloud auth activate-service-account --key-file=$HOME/gcloud.json $*"
      - name: deploy function
        run: |
          gcloud functions deploy googlenet --runtime python37 --allow-unauthenticated --memory 1024 --max-instances 3 --project ml-webpage-264418 --service-account github-action@ml-webpage-264418.iam.gserviceaccount.com --source ./model_functions/classification/googlenet
  deploy-cloudfunctions-resnet18:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install gcloud SDK
        run: |
          sudo apt-get update && sudo apt-get install google-cloud-sdk
      - name: Activate Service Account
        env:
          GCLOUD_AUTH: ${{ secrets.GCLOUD_AUTH }}
        run: |
          echo "$GCLOUD_AUTH" | base64 --decode > "$HOME"/gcloud.json
          sh -c "gcloud auth activate-service-account --key-file=$HOME/gcloud.json $*"
      - name: deploy function
        run: |
          gcloud functions deploy resnet18 --runtime python37 --allow-unauthenticated --memory 512 --max-instances 3 --project ml-webpage-264418 --service-account github-action@ml-webpage-264418.iam.gserviceaccount.com --source ./model_functions/classification/resnet18
  deploy-cloudfunctions-resnet50:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install gcloud SDK
        run: |
          sudo apt-get update && sudo apt-get install google-cloud-sdk
      - name: Activate Service Account
        env:
          GCLOUD_AUTH: ${{ secrets.GCLOUD_AUTH }}
        run: |
          echo "$GCLOUD_AUTH" | base64 --decode > "$HOME"/gcloud.json
          sh -c "gcloud auth activate-service-account --key-file=$HOME/gcloud.json $*"
      - name: deploy function
        run: |
          gcloud functions deploy resnet50 --runtime python37 --allow-unauthenticated --memory 1024 --max-instances 3 --project ml-webpage-264418 --service-account github-action@ml-webpage-264418.iam.gserviceaccount.com --source ./model_functions/classification/resnet50
  deploy-cloudfunctions-resnext:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install gcloud SDK
        run: |
          sudo apt-get update && sudo apt-get install google-cloud-sdk
      - name: Activate Service Account
        env:
          GCLOUD_AUTH: ${{ secrets.GCLOUD_AUTH }}
        run: |
          echo "$GCLOUD_AUTH" | base64 --decode > "$HOME"/gcloud.json
          sh -c "gcloud auth activate-service-account --key-file=$HOME/gcloud.json $*"
      - name: deploy function
        run: |
          gcloud functions deploy resnext --runtime python37 --allow-unauthenticated --memory 2048 --max-instances 3 --project ml-webpage-264418 --service-account github-action@ml-webpage-264418.iam.gserviceaccount.com --source ./model_functions/classification/resnext
  deploy-cloudfunctions-squeeznet:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install gcloud SDK
        run: |
          sudo apt-get update && sudo apt-get install google-cloud-sdk
      - name: Activate Service Account
        env:
          GCLOUD_AUTH: ${{ secrets.GCLOUD_AUTH }}
        run: |
          echo "$GCLOUD_AUTH" | base64 --decode > "$HOME"/gcloud.json
          sh -c "gcloud auth activate-service-account --key-file=$HOME/gcloud.json $*"
      - name: deploy function
        run: |
          gcloud functions deploy squeeznet --runtime python37 --allow-unauthenticated --memory 256 --max-instances 3 --project ml-webpage-264418 --service-account github-action@ml-webpage-264418.iam.gserviceaccount.com --source ./model_functions/classification/squeeznet
  deploy-cloudfunctions-vgg:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install gcloud SDK
        run: |
          sudo apt-get update && sudo apt-get install google-cloud-sdk
      - name: Activate Service Account
        env:
          GCLOUD_AUTH: ${{ secrets.GCLOUD_AUTH }}
        run: |
          echo "$GCLOUD_AUTH" | base64 --decode > "$HOME"/gcloud.json
          sh -c "gcloud auth activate-service-account --key-file=$HOME/gcloud.json $*"
      - name: deploy function
        run: |
          gcloud functions deploy vgg --runtime python37 --allow-unauthenticated --memory 2048 --max-instances 3 --project ml-webpage-264418 --service-account github-action@ml-webpage-264418.iam.gserviceaccount.com --source ./model_functions/classification/vgg

#=========deploy glcoud funtions===========
