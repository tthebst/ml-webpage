name: page

on:
  push:
    branches: [master]

jobs:
  #=========build and push container images===========
  deepspeech-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Install gcloud SDK
        run: |
          sudo apt-get update && sudo apt-get install google-cloud-sdk
      - name: Activate Service Account
        env:
          GCLOUD_AUTH: ${{ secrets.GCLOUD_AUTH }}
        run: |
          echo "$GCLOUD_AUTH" | base64 --decode > "$HOME"/gcloud.json
          sh -c "gcloud auth activate-service-account --key-file=$HOME/gcloud.json $*"
      - name: push to GCR && deploy to cloudrun
        run: |
          gcloud auth configure-docker
          gsutil cp gs://ml-webpage/librispeech_pretrained_v2.pth ./model_functions/language/deepspeech/librispeech_pretrained_v2.pth
          docker build -t $GCR_REGISTRY/$PROCECT_ID/$GCR_REPOSITORY:$IMAGE_TAG ./model_functions/language/deepspeech
          docker push $GCR_REGISTRY/$PROCECT_ID/$GCR_REPOSITORY:$IMAGE_TAG
          gcloud run deploy deepspeech --project ml-webpage-264418 --platform managed --region europe-west4 --port 8080 --image $GCR_REGISTRY/$PROCECT_ID/$GCR_REPOSITORY:$IMAGE_TAG --allow-unauthenticated --memory 2Gi --max-instances 2
        env:
          GCR_REGISTRY: eu.gcr.io
          GCR_REPOSITORY: deepspeech
          IMAGE_TAG: latest
          PROCECT_ID: ml-webpage-264418
  language-deploy:
    runs-on: ubuntu-latest
    needs: deepspeech-deploy
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Install gcloud SDK
        run: |
          sudo apt-get update && sudo apt-get install google-cloud-sdk
      - name: Activate Service Account
        env:
          GCLOUD_AUTH: ${{ secrets.GCLOUD_AUTH }}
        run: |
          echo "$GCLOUD_AUTH" | base64 --decode > "$HOME"/gcloud.json
          sh -c "gcloud auth activate-service-account --key-file=$HOME/gcloud.json $*"
      - name: push to GCR && deploy to cloudrun
        run: |
          gcloud auth configure-docker
          docker build -t $GCR_REGISTRY/$PROCECT_ID/$GCR_REPOSITORY:$IMAGE_TAG ./model_functions/language/
          docker push $GCR_REGISTRY/$PROCECT_ID/$GCR_REPOSITORY:$IMAGE_TAG
          gcloud run deploy language --project ml-webpage-264418 --platform managed --region europe-west4 --port 8080 --image $GCR_REGISTRY/$PROCECT_ID/$GCR_REPOSITORY:$IMAGE_TAG --allow-unauthenticated --memory 2Gi --max-instances 2
        env:
          GCR_REGISTRY: eu.gcr.io
          GCR_REPOSITORY: language
          IMAGE_TAG: latest
          PROCECT_ID: ml-webpage-264418
  generative-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Install gcloud SDK
        run: |
          sudo apt-get update && sudo apt-get install google-cloud-sdk
      - name: Activate Service Account
        env:
          GCLOUD_AUTH: ${{ secrets.GCLOUD_AUTH }}
        run: |
          echo "$GCLOUD_AUTH" | base64 --decode > "$HOME"/gcloud.json
          sh -c "gcloud auth activate-service-account --key-file=$HOME/gcloud.json $*"
      - name: push to GCR && deploy to cloudrun
        run: |
          gcloud auth configure-docker
          gsutil cp gs://ml-webpage/2.tar.gz ./model_functions/generative/2.tar.gz 
          mkdir ./model_functions/generative/2
          tar -xf ./model_functions/generative/2.tar.gz -C ./model_functions/generative/2
          docker build -t $GCR_REGISTRY/$PROCECT_ID/$GCR_REPOSITORY:$IMAGE_TAG ./model_functions/generative/
          docker push $GCR_REGISTRY/$PROCECT_ID/$GCR_REPOSITORY:$IMAGE_TAG
          gcloud run deploy generative --project ml-webpage-264418 --platform managed --region europe-west4 --port 8080 --image $GCR_REGISTRY/$PROCECT_ID/$GCR_REPOSITORY:$IMAGE_TAG --allow-unauthenticated --memory 2Gi --max-instances 2
        env:
          GCR_REGISTRY: eu.gcr.io
          GCR_REPOSITORY: generative
          IMAGE_TAG: latest
          PROCECT_ID: ml-webpage-264418
  object-detect-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Install gcloud SDK
        run: |
          sudo apt-get update && sudo apt-get install google-cloud-sdk
      - name: Activate Service Account
        env:
          GCLOUD_AUTH: ${{ secrets.GCLOUD_AUTH }}
        run: |
          echo "$GCLOUD_AUTH" | base64 --decode > "$HOME"/gcloud.json
          sh -c "gcloud auth activate-service-account --key-file=$HOME/gcloud.json $*"
      - name: push to GCR && deploy to cloudrun
        run: |
          gcloud auth configure-docker
          docker build -t $GCR_REGISTRY/$PROCECT_ID/$GCR_REPOSITORY:$IMAGE_TAG ./model_functions/object_detection/
          docker push $GCR_REGISTRY/$PROCECT_ID/$GCR_REPOSITORY:$IMAGE_TAG
          gcloud run deploy object-detect --project ml-webpage-264418 --platform managed --region europe-west4 --port 8080 --image $GCR_REGISTRY/$PROCECT_ID/$GCR_REPOSITORY:$IMAGE_TAG --allow-unauthenticated --memory 2Gi --max-instances 2
        env:
          GCR_REGISTRY: eu.gcr.io
          GCR_REPOSITORY: object_detection
          IMAGE_TAG: latest
          PROCECT_ID: ml-webpage-264418
  webapp-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Install gcloud SDK
        run: |
          sudo apt-get update && sudo apt-get install google-cloud-sdk
      - name: Activate Service Account
        env:
          GCLOUD_AUTH: ${{ secrets.GCLOUD_AUTH }}
        run: |
          echo "$GCLOUD_AUTH" | base64 --decode > "$HOME"/gcloud.json
          sh -c "gcloud auth activate-service-account --key-file=$HOME/gcloud.json $*"
      - name: push to GCR && deploy to cloudrun
        run: |
          gcloud auth configure-docker
          docker build -t $GCR_REGISTRY/$PROCECT_ID/$GCR_REPOSITORY:$IMAGE_TAG ./flask
          docker push $GCR_REGISTRY/$PROCECT_ID/$GCR_REPOSITORY:$IMAGE_TAG
          gcloud run deploy webapp --project ml-webpage-264418 --platform managed --region europe-west4 --port 8080 --image $GCR_REGISTRY/$PROCECT_ID/$GCR_REPOSITORY:$IMAGE_TAG --allow-unauthenticated --memory 512Mi --max-instances 2
        env:
          GCR_REGISTRY: eu.gcr.io
          GCR_REPOSITORY: webapp
          IMAGE_TAG: latest
          PROCECT_ID: ml-webpage-264418
  #=========deploy glcoud funtions===========
  deploy-cloudfunctions-alexnet:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install gcloud SDK
        run: |
          sudo apt-get update && sudo apt-get install google-cloud-sdk && sudo apt-get install python3-setuptools
      - name: Activate Service Account
        env:
          GCLOUD_AUTH: ${{ secrets.GCLOUD_AUTH }}
        run: |
          echo "$GCLOUD_AUTH" | base64 --decode > "$HOME"/gcloud.json
          sh -c "gcloud auth activate-service-account --key-file=$HOME/gcloud.json $*"
      - name: check syntax
        run: |
          pip install wheel
          pip3 install pylint
          pylint ./model_functions/classification/alexnet/main.py
      - name: deploy function
        run: |
          gcloud functions deploy alexnet --runtime python37 --allow-unauthenticated --memory 2048 --max-instances 3 --project ml-webpage-264418 --service-account github-action@ml-webpage-264418.iam.gserviceaccount.com --source ./model_functions/classification/alexnet
  deploy-cloudfunctions-densenet:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install gcloud SDK
        run: |
          sudo apt-get update && sudo apt-get install google-cloud-sdk && sudo apt-get install python3-setuptools
      - name: Activate Service Account
        env:
          GCLOUD_AUTH: ${{ secrets.GCLOUD_AUTH }}
        run: |
          echo "$GCLOUD_AUTH" | base64 --decode > "$HOME"/gcloud.json
          sh -c "gcloud auth activate-service-account --key-file=$HOME/gcloud.json $*"
      - name: check syntax
        run: |
          pip install wheel
          pip3 install pylint
          pylint ./model_functions/classification/densenet/main.py
      - name: deploy function
        run: |
          gcloud functions deploy densenet --runtime python37 --allow-unauthenticated --memory 1024 --max-instances 3 --project ml-webpage-264418 --service-account github-action@ml-webpage-264418.iam.gserviceaccount.com --source ./model_functions/classification/densenet
  deploy-cloudfunctions-googlenet:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install gcloud SDK
        run: |
          sudo apt-get update && sudo apt-get install google-cloud-sdk && sudo apt-get install python3-setuptools
      - name: Activate Service Account
        env:
          GCLOUD_AUTH: ${{ secrets.GCLOUD_AUTH }}
        run: |
          echo "$GCLOUD_AUTH" | base64 --decode > "$HOME"/gcloud.json
          sh -c "gcloud auth activate-service-account --key-file=$HOME/gcloud.json $*"
      - name: check syntax
        run: |
          pip install wheel
          pip3 install pylint
          pylint ./model_functions/classification/googlenet/main.py
      - name: deploy function
        run: |
          gcloud functions deploy googlenet --runtime python37 --allow-unauthenticated --memory 1024 --max-instances 3 --project ml-webpage-264418 --service-account github-action@ml-webpage-264418.iam.gserviceaccount.com --source ./model_functions/classification/googlenet
  deploy-cloudfunctions-resnet18:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install gcloud SDK
        run: |
          sudo apt-get update && sudo apt-get install google-cloud-sdk && sudo apt-get install python3-setuptools
      - name: Activate Service Account
        env:
          GCLOUD_AUTH: ${{ secrets.GCLOUD_AUTH }}
        run: |
          echo "$GCLOUD_AUTH" | base64 --decode > "$HOME"/gcloud.json
          sh -c "gcloud auth activate-service-account --key-file=$HOME/gcloud.json $*"
      - name: check syntax
        run: |
          pip install wheel
          pip3 install pylint
          pylint ./model_functions/classification/resnet18/main.py
      - name: deploy function
        run: |
          gcloud functions deploy resnet18 --runtime python37 --allow-unauthenticated --memory 512 --max-instances 3 --project ml-webpage-264418 --service-account github-action@ml-webpage-264418.iam.gserviceaccount.com --source ./model_functions/classification/resnet18
  deploy-cloudfunctions-resnet50:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install gcloud SDK
        run: |
          sudo apt-get update && sudo apt-get install google-cloud-sdk && sudo apt-get install python3-setuptools
      - name: Activate Service Account
        env:
          GCLOUD_AUTH: ${{ secrets.GCLOUD_AUTH }}
        run: |
          echo "$GCLOUD_AUTH" | base64 --decode > "$HOME"/gcloud.json
          sh -c "gcloud auth activate-service-account --key-file=$HOME/gcloud.json $*"
      - name: check syntax
        run: |
          pip install wheel
          pip3 install pylint
          pylint ./model_functions/classification/resnet50/main.py
      - name: deploy function
        run: |
          gcloud functions deploy resnet50 --runtime python37 --allow-unauthenticated --memory 1024 --max-instances 3 --project ml-webpage-264418 --service-account github-action@ml-webpage-264418.iam.gserviceaccount.com --source ./model_functions/classification/resnet50
  deploy-cloudfunctions-resnext:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install gcloud SDK
        run: |
          sudo apt-get update && sudo apt-get install google-cloud-sdk && sudo apt-get install python3-setuptools
      - name: Activate Service Account
        env:
          GCLOUD_AUTH: ${{ secrets.GCLOUD_AUTH }}
        run: |
          echo "$GCLOUD_AUTH" | base64 --decode > "$HOME"/gcloud.json
          sh -c "gcloud auth activate-service-account --key-file=$HOME/gcloud.json $*"
      - name: check syntax
        run: |
          pip3 install pylint
          pylint ./model_functions/classification/resnext/main.py
      - name: deploy function
        run: |
          gcloud functions deploy resnext --runtime python37 --allow-unauthenticated --memory 2048 --max-instances 3 --project ml-webpage-264418 --service-account github-action@ml-webpage-264418.iam.gserviceaccount.com --source ./model_functions/classification/resnext
  deploy-cloudfunctions-squeeznet:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install gcloud SDK
        run: |
          sudo apt-get update && sudo apt-get install google-cloud-sdk && sudo apt-get install python3-setuptools
      - name: Activate Service Account
        env:
          GCLOUD_AUTH: ${{ secrets.GCLOUD_AUTH }}
        run: |
          echo "$GCLOUD_AUTH" | base64 --decode > "$HOME"/gcloud.json
          sh -c "gcloud auth activate-service-account --key-file=$HOME/gcloud.json $*"
      - name: check syntax
        run: |
          pip install wheel
          pip3 install pylint
          pylint ./model_functions/classification/squeeznet/main.py
      - name: deploy function
        run: |
          gcloud functions deploy squeeznet --runtime python37 --allow-unauthenticated --memory 256 --max-instances 3 --project ml-webpage-264418 --service-account github-action@ml-webpage-264418.iam.gserviceaccount.com --source ./model_functions/classification/squeeznet
  deploy-cloudfunctions-vgg:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install gcloud SDK
        run: |
          sudo apt-get update && sudo apt-get install google-cloud-sdk && sudo apt-get install python3-setuptools
      - name: Activate Service Account
        env:
          GCLOUD_AUTH: ${{ secrets.GCLOUD_AUTH }}
        run: |
          echo "$GCLOUD_AUTH" | base64 --decode > "$HOME"/gcloud.json
          sh -c "gcloud auth activate-service-account --key-file=$HOME/gcloud.json $*"
      - name: check syntax
        run: |
          pip install wheel
          pip3 install pylint
          pylint ./model_functions/classification/vgg/main.py
      - name: deploy function
        run: |
          gcloud functions deploy vgg --runtime python37 --allow-unauthenticated --memory 2048 --max-instances 3 --project ml-webpage-264418 --service-account github-action@ml-webpage-264418.iam.gserviceaccount.com --source ./model_functions/classification/vgg

#=========deploy glcoud funtions===========
